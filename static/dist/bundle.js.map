{"version":3,"sources":["unbundle.js"],"names":["Store","require","console","error","settings","defaults","pageSize","$","regeneratorRuntime","log","columnTypes","playlists","songs","columnProps","item","name","createdAt","JSON","parse","length","size","musicServer","capitlizeFirst","string","charAt","toUpperCase","slice","serialize","obj","str","p","push","encodeURIComponent","join","ResultView","React","Component","constructor","props","state","pageIndex","type","col1","i18n","__","col2","col3","pageData","search","bind","shouldComponentUpdate","nextProps","queryChanged","query","componentDidUpdate","prevProps","componentDidMount","componentThis","updateSearchInterval","setInterval","componentWillUnmount","clearInterval","get","resp","fetch","limit","offset","json","status","data","setState","render","comps","map","id","contents","PlaylistView","searchBoxValue","fetchSearch","event","searchValue","target","value","views","uiManager","on","document","getElementById"],"mappings":"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","file":"bundle.js","sourceRoot":"..","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\nconst Store = require('electron-store');\r\n// Settings Loading\r\nif(!Store){\r\n\tconsole.error(\"NO STORE found\");\r\n}\r\nconst settings = new Store({\r\n\tdefaults: {\r\n\t\tpageSize: 25,\r\n\t},\r\n});\r\n\r\n//import {$} from \"jquery\";\r\nconst $ = require(\"jquery\");\r\nconst regeneratorRuntime = require(\"regenerator-runtime\");\r\nconsole.log(\"bundle :D\");\r\nconst columnTypes = {\r\n\tplaylists: [\"Name\", \"Date\", \"Songs Count\"],\r\n\tsongs: [\"Name\", \"Artist\", \"Duration\"],\r\n};\r\nconst columnProps = {\r\n\tplaylists: [item => item.name , item => item.createdAt, item => JSON.parse(item).length],\r\n\tplaylists: [item => item.name , item => item.createdAt, item => item.size]\r\n}\r\nlet musicServer = \"http://localhost:3000\"; // NO SLASH!\r\n// RIP RepeatedComponent 2020 why did we need that anyway\r\nfunction capitlizeFirst(string) {\r\n\treturn string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n// https://stackoverflow.com/questions/7045065/how-do-i-turn-a-javascript-dictionary-into-an-encoded-url-string\r\nfunction serialize(obj) {\r\n\tvar str = [];\r\n\tfor (var p in obj)\r\n\t\tstr.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\r\n\treturn str.join(\"&\");\r\n}\r\nclass ResultView extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props );\r\n\t\tthis.state = {\r\n\t\t\tpageIndex: 0,\r\n\t\t\ttype: props.type,\r\n\t\t\tcol1: i18n.__(columnTypes[props.type][0]),\r\n\t\t\tcol2: i18n.__(columnTypes[props.type][1]),\r\n\t\t\tcol3: i18n.__(columnTypes[props.type][2]),\r\n\t\t\tpageData: []\r\n\t\t};\r\n\t\tthis.search.bind(this)();\r\n\t}\r\n\tshouldComponentUpdate(nextProps) {\r\n\t\tconsole.log(\"Update Request\");\r\n        const queryChanged = this.props.query !== nextProps.query;\r\n        return queryChanged;\r\n\t}\r\n\tcomponentDidUpdate(prevProps){\r\n\t\tif(this.props.query !== prevProps.query){\r\n\t\t\tthis.search();\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t// Code to run when component starts\r\n\t\tconsole.log(\"Result View Mount\")\r\n\t\tthis.search();\r\n\t\tlet componentThis = this;\r\n\t\tthis.updateSearchInterval = setInterval(function(){\r\n\t\t\tif(componentThis.query){\r\n\t\t\t\tcomponentThis.search.bind(componentThis)();\r\n\t\t\t}\r\n\t\t}, 2500);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\t// Componoent dies -> deconstructor\r\n\t\tclearInterval(this.updateSearchInterval);\r\n\t}\r\n\tasync search() {\r\n\t\tconsole.log(\"Running Search Request\");\r\n\t\tlet pageSize = settings.get(\"pageSize\");\r\n\t\tlet resp = await (await fetch(\r\n\t\t\tmusicServer +\r\n\t\t\t\t\"/api/fetch_\" +\r\n\t\t\t\tthis.state.type +\r\n\t\t\t\t\"?\" +\r\n\t\t\t\tserialize({\r\n\t\t\t\t\tlimit: pageSize,\r\n\t\t\t\t\toffset: pageSize * this.state.pageIndex,\r\n\t\t\t\t\tname: this.props.query + \"%\",\r\n\t\t\t\t})\r\n\t\t)).json();\r\n\t\tif (resp.status == \"ok\") {\r\n\t\t\tlet data = resp.data;\r\n\t\t\tconsole.log(\"Updating data for \"+this.state.query);\r\n\t\t\tthis.setState(function (state, props) {\r\n\t\t\t\treturn {pageData: data};\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tlet comps = this.state.pageData.map(function(item){\r\n\t\t\treturn <div className=\"row\" key={item.id}>\r\n\t\t\t\t\t<div className=\"col s4\">{item.name}</div>\r\n\t\t\t\t\t<div className=\"col s4\">{item.createdAt}</div>\r\n\t\t\t\t\t<div className=\"col s4\">{JSON.parse(item.contents).length}</div>\r\n\t\t\t\t</div>\r\n\t\t})\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col s4\">{this.state.col1}</div>\r\n\t\t\t\t\t<div className=\"col s4\">{this.state.col2}</div>\r\n\t\t\t\t\t<div className=\"col s4\">{this.state.col3}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{comps}\r\n\t\t\t\t<p>\r\n\t\t{i18n.__(\"Showing \")}{this.state.pageData.length} {i18n.__(\" items\")};\r\n\t\t\t\t</p>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\nclass PlaylistView extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\t//super(props);\r\n\t\tthis.state = { searchBoxValue: \"\" };\r\n\t\t//this.fetchSearch = this.fetchSearch.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t// Code to run when component is destoryed -> constructor\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\t// Componoent dies -> deconstructor\r\n\t}\r\n\tfetchSearch(event) {\r\n\t\t//console.log(event);\r\n\t\t//console.log(\"Updating Search\");\r\n\t\tlet searchValue = event.target.value;\r\n\t\tconsole.log(\"New search value \"+searchValue);\r\n\t\tif (event.target.value) {\r\n\t\t\tthis.setState(function (state, props) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsearchBoxValue: searchValue,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tid=\"searchbox-playlists\"\r\n\t\t\t\t\tclassName=\"searchbox\"\r\n\t\t\t\t\tonChange={this.fetchSearch.bind(this)}\r\n\t\t\t\t\tonKeyUp={this.fetchSearch.bind(this)}\r\n\t\t\t\t\tplaceholder={i18n.__(\"Type to search\")}\r\n\t\t\t\t/>\r\n\t\t\t\t<ResultView\r\n\t\t\t\t\ttype=\"playlists\"\r\n\t\t\t\t\tquery={this.state.searchBoxValue}\r\n\t\t\t\t></ResultView>\r\n\t\t\t\t<p>{i18n.__(\"Current querying \")} {settings.get(\"pageSize\")} {i18n.__(\" playlists matching the query \")} {this.state.searchBoxValue}</p>\r\n\t\t\t\t<div></div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\nlet views = {};\r\nviews.playlists = <PlaylistView />;\r\n\r\n// Bootstrap code\r\nif (uiManager) {\r\n\tconsole.log(\"Binding to uiManager\");\r\n\tuiManager.on(\"launchview\", function (data) {\r\n\t\tconsole.log(data);\r\n\t\tconsole.log(\"Rendering \" + data.id);\r\n\t\tconsole.log(views[data.id]);\r\n\t\tReactDOM.render(views[data.id], document.getElementById(\"contentview\"));\r\n\t});\r\n} else {\r\n\tconsole.log(\"Error ui manager not found\");\r\n}\r\n"]}