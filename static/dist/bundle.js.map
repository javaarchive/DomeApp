{"version":3,"sources":["utils.js","player.js","prefdefaults.json","unbundle.js"],"names":["formatDuration","seconds","curSecs","out","Math","floor","toString","padStart","localizedFuncs","EventEmitter","require","hasArtist","hasMultipleArtists","i18n","ex","PlayerComponent","React","Component","constructor","props","preparedState","itemName","__","position","itemLength","length","enabled","userDragging","internalPlaylist","name","controller","state","componentDidMount","setNewController","ee","setState","registerEvents","playerEventsRegistered","on","componentWillUnmount","updateItem","type","params","properties","includes","itemMadeBy","artist","duration","changePos","ev","newVal","console","log","updateDuration","time","itemDuration","userDragStart","userDragEnd","render","getLocale","bind","styles","playerTitle","playerItemMadeBy","module","exports","pageSize","snackbarAutoHideDuration","test","enabledContentHandlers","youtubePlayerMethod","fallbackYoutubePlayerMethod","Store","warn","settings","defaults","prefdefaults","songViewHeaders","$","regeneratorRuntime","musicServer","capitlizeFirst","string","charAt","toUpperCase","slice","serialize","obj","str","p","push","encodeURIComponent","join","calcColClass","cols","Alert","placeholder","item","key","ResultView","PureComponent","pageIndex","pageData","connectionFailedSnackbarOpen","columns","columnHeaders","colHeaders","map","unlocalizedName","Array","something","search","componentDidUpdate","prevProps","query","info","componentThis","updateSearchInterval","setInterval","clearInterval","hideConnectionFailureSnackbar","showConnectionFailureSnackbar","handleConnectionFailureSnackbarClose","event","reason","get","resp","fetch","limit","offset","json","status","data","onRowClickActivator","index","onRowClick","outerThis","comps","colgenerator","i","elem","renderCols","tableHead","Paper","PlaylistView","searchBoxValue","fetchSearch","searchValue","target","value","onItemClick","e","SongView","createSongNameCol","createSongArtistCol","createDurationCol","classes","colGenerators","handleRowClick","rowData","HomeComponent","stateChange","MainDrawerComponent","triggerView","viewName","setCurView","drawerToggle","views","MainComponent","useDarkMode","theme","useMemo","palette","serversAnchorEl","setServersAnchorEl","useState","drawerOpen","setDrawerOpen","toggleDrawer","curView","serversOpen","Boolean","root","flexGrow","title","menuButton","marginRight","spacing","stylesSet","handleMenu","vertical","horizontal","handleClose","setServer","comp","playlists","songs","homeview","window","debug","document","getElementById"],"mappings":"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","file":"bundle.js","sourceRoot":"..","sourcesContent":["// Localizations\nfunction formatDuration(seconds) {\n\tif(!seconds){\n\t\treturn \"---\";\n\t}\n\tlet curSecs = seconds;\n\tlet out = \"\";\n\tif (curSecs > 60 * 60) {\n\t\tout += Math.floor(curSecs / (60 * 60)) + \":\";\n\t\tcurSecs = curSecs % (60 * 60);\n\t}\n\tout +=\n\t\tMath.floor(curSecs / 60)\n\t\t\t.toString()\n\t\t\t.padStart(2, \"0\") +\n\t\t\":\" +\n\t\t(curSecs % 60).toString().padStart(2, \"0\");\n\treturn out;\n}\nconst localizedFuncs = {\n    \"en\":{\n        formatDuration: formatDuration\n    }\n}\nexport {localizedFuncs};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// Fonts (broken currently)\n// import \"fontsource-roboto\";\n// Styles\n\nimport styles from \"./player.module.css\";\n// Text Stuff\nimport Typography from \"@material-ui/core/Typography\";\n// Grid Utils\nimport Grid from \"@material-ui/core/Grid\";\n// Widgets\nimport Slider from \"@material-ui/core/Slider\";\n// Get localized functions\nimport { localizedFuncs } from \"./utils.js\";\n// Event Emitter\nconst EventEmitter = require('events');\n\n// React Player to be imported\n// Meant to be reusable in other contexts\nconst hasArtist = [\"Song\"];\nconst hasMultipleArtists = [\"Album\"]; // Playlists are usually user created so they will have a variety of artists\nif (!i18n) {\n\ttry {\n\t\tvar i18n = require(\"i18n\");\n\t} catch (ex) {\n\t\tvar i18n = null; // Allow custom instances to be added later.\n\t}\n} // Might already be init\nclass PlayerComponent extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props); // Deprecated but needed\n\t\tlet preparedState = {\n\t\t\titemName: i18n.__(\"Nothing Playing\"),\n\t\t\tposition: 0,\n\t\t\titemLength: 0,\n\t\t\tlength: 1200,\n\t\t\tenabled: false,\n\t\t\tuserDragging: false, // Do not update while user is dragging\n\t\t\tinternalPlaylist: []\n\t\t};\n\t\tif (props.name) {\n\t\t\tpreparedState[\"name\"] = props.name;\n\t\t\tpreparedState[\"enabled\"] = true;\n\t\t}\n\t\tif(props.controller){\n\t\t\tpreparedState[\"controller\"] = props.controller;\n\t\t}else{\n\t\t\tpreparedState[\"controller\"] = new EventEmitter();\n\t\t}\n\t\tthis.state = preparedState;\n\t}\n\tcomponentDidMount() {\n\t\t// Code to run when component is destoryed -> constructor\n\t}\n\tsetNewController(ee){\n\t\tthis.setState(function (state, props) {\n\t\t\treturn { controller:ee };\n\t\t});\n\t}\n\tregisterEvents(ee){\n\t\tif(ee.playerEventsRegistered){\n\t\t\treturn;\n\t\t}\n\t\tlet oThis = this; // original this\n\t\tee.playerEventsRegistered = true;\n\t\tee.on(\"queueSong\",function(){\n\t\t\t\n\t\t});\n\t}\n\tcomponentWillUnmount() {\n\t\t// Componoent dies -> deconstructor\n\t}\n\tupdateItem(type, params) {\n\t\tlet properties = {};\n\n\t\tif (\"name\" in params) {\n\t\t\tproperties.itemName = params.name;\n\t\t}\n\t\tif (hasArtist.includes(type)) {\n\t\t\tif (\"artist\" in params) {\n\t\t\t\tproperties.itemMadeBy = params.artist;\n\t\t\t}\n\t\t}\n\t\tif (\"duration\" in params) {\n\t\t\tproperties.duration = params.duration;\n\t\t} else {\n\t\t\tproperties.duration = null; // Not provided\n\t\t}\n\n\t\tthis.setState(function (state, props) {\n\t\t\treturn properties;\n\t\t});\n\t}\n\tchangePos(ev, newVal) {\n\t\tconsole.log(\"Position changed to\", newVal);\n\t\tthis.setState(function (state, props) {\n\t\t\treturn { position: newVal };\n\t\t});\n\t}\n\tupdateDuration(time) {\n\t\t// Sometimes duration can be found afterwards\n\t\tthis.setState(function (state, props) {\n\t\t\treturn { itemDuration: time };\n\t\t});\n\t}\n\t// User Drag Handlers\n\t// TODO: Account for multi touch displays???\n\tuserDragStart(ev){\n\t\tthis.setState(function (state, props) {\n\t\t\treturn { userDragging: true};\n\t\t});\n\t}\n\tuserDragEnd(ev){\n\t\tthis.setState(function (state, props) {\n\t\t\treturn { userDragging: false };\n\t\t});\n\t}\n\t// ! Main Rendering Code\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"player\">\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Typography variant=\"caption\">{this.state.enabled\n\t\t\t\t\t\t\t\t? (localizedFuncs[i18n.getLocale()].formatDuration(\n\t\t\t\t\t\t\t\t\t\tthis.state.position\n\t\t\t\t\t\t\t\t  ))\n\t\t\t\t\t\t\t\t: i18n.__(\"Idle Duration\")}</Typography>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={8}>\n\t\t\t\t\t\t\t<div className=\"playback-progress\" onPointerDown={this.userDragStart.bind(this)} onPointerUp={this.userDragEnd.bind(this)}>\n\t\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\t\tvalue={this.state.position}\n\t\t\t\t\t\t\t\t\tonChange={this.changePos.bind(this)}\n\t\t\t\t\t\t\t\t\taria-labelledby=\"continuous-slider\"\n\t\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\t\tmax={this.state.length}\n\t\t\t\t\t\t\t\t\tdisabled={!this.state.enabled}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t\t\t<Typography variant=\"caption\">{this.state.enabled\n\t\t\t\t\t\t\t\t? (\"-\" + localizedFuncs[i18n.getLocale()].formatDuration(\n\t\t\t\t\t\t\t\t\t\tthis.state.itemLength - this.state.position\n\t\t\t\t\t\t\t\t  ))\n\t\t\t\t\t\t\t\t: i18n.__(\"Idle Duration\")}</Typography>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<span className={styles.playerTitle}>\n\t\t\t\t\t\t<Typography variant=\"h5\">{this.state.itemName}</Typography>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className={styles.playerItemMadeBy}>\n\t\t\t\t\t\t<Typography variant=\"h6\">{this.state.itemMadeBy}</Typography>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\nconsole.log(\"Imported styles\", styles);\nexport { PlayerComponent };\n","module.exports={pageSize:25,snackbarAutoHideDuration:5e3,test:!0,enabledContentHandlers:[\"youtube\"],youtubePlayerMethod:\"iframe\",fallbackYoutubePlayerMethod:\"browserView\"};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// Fonts\n\n// broken?\n// Roboto font for material\n//import 'fontsource-roboto'; // Workaround parcel issue?\n\n// Core components\nimport { Skeleton } from \"@material-ui/lab\";\nimport { Container } from \"@material-ui/core\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n// import FormGroup from \"@material-ui/core/FormGroup\";\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\n// Utilites\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// Ui icons\nimport MenuIcon from \"@material-ui/icons/Menu\"; // Also called a hamburger\nimport StorageIcon from \"@material-ui/icons/Storage\";\nimport MusicNoteIcon from \"@material-ui/icons/MusicNote\";\nimport HomeRoundedIcon from \"@material-ui/icons/HomeRounded\";\nimport SettingsIcon from '@material-ui/icons/Settings';\n\n// Ui Widgets\n\nimport Paper from \"@material-ui/core/Paper\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport MuiAlert from '@material-ui/lab/Alert';\n// List\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n// Tables\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\n// Utilities\nimport clsx from \"clsx\";\n\n// Reusable Player Componoent\nimport { PlayerComponent } from \"./player\";\n\nconst Store = require(\"electron-store\");\n// Settings Loading\nif (!Store) {\n\tconsole.warn(\"NO STORE found\");\n}\nimport prefdefaults from \"./prefdefaults.json\";\nconst settings = new Store({\n\tdefaults: prefdefaults,\n});\n// Constants\nconst songViewHeaders = [\"Song Name\",\"Artist\",\"Duration\"];\n\n\n\n//import {$} from \"jquery\";\nconst $ = require(\"jquery\");\nconst regeneratorRuntime = require(\"regenerator-runtime\");\nconsole.log(\"bundle :D\");\nimport { localizedFuncs } from \"./utils.js\";\n\n// Constants\n\nlet musicServer = \"http://localhost:3000\"; // NO SLASH!\nfunction capitlizeFirst(string) {\n\treturn string.charAt(0).toUpperCase() + string.slice(1);\n}\n// https://stackoverflow.com/questions/7045065/how-do-i-turn-a-javascript-dictionary-into-an-encoded-url-string\nfunction serialize(obj) {\n\tvar str = [];\n\tfor (var p in obj)\n\t\tstr.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n\treturn str.join(\"&\");\n}\nfunction calcColClass(cols) {\n\treturn \"s\" + 12 / cols;\n}\n// https://material-ui.com/components/snackbars/\nfunction Alert(props) {\n\treturn <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\nfunction placeholder(item, key){\n\treturn <Skeleton animation=\"wave\" key={key} />;\n}\nclass ResultView extends React.PureComponent {\n\tconstructor(props) {\n\t\tsuper(props); // Deprecated but needed anyway\n\t\tthis.state = {\n\t\t\tpageIndex: 0,\n\t\t\ttype: props.type,\n\t\t\tpageData: [],\n\t\t\tconnectionFailedSnackbarOpen: false,\n\t\t\tcolumns: 3\n\t\t};\n\t\tif(props.columns){\n\t\t\tthis.state.columns = props.columns;\n\t\t}\n\t\tif(props.columnHeaders){\n\t\t\tthis.state.colHeaders = props.columnHeaders.map(unlocalizedName => i18n.__(unlocalizedName));\n\t\t}else{\n\t\t\tthis.state.colHeaders = (new Array(this.state.columns)).map(something => i18n.__(\"Unknown Header\"));\n\t\t}\n\t\tthis.search.bind(this)();\n\t}\n\t\n\tcomponentDidUpdate(prevProps) {\n\t\tif (this.props.query !== prevProps.query) {\n\t\t\tthis.search();\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\t// Code to run when component starts\n\t\tconsole.info(\"Result View Mounted\");\n\t\tthis.search();\n\t\tlet componentThis = this;\n\t\tthis.updateSearchInterval = setInterval(function () {\n\t\t\tif (componentThis.query) {\n\t\t\t\tcomponentThis.search.bind(componentThis)();\n\t\t\t}\n\t\t}, 2500);\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// Componoent dies -> deconstructor\n\t\tclearInterval(this.updateSearchInterval);\n\t}\n\thideConnectionFailureSnackbar(){\n\t\tthis.setState(function (state, props) {\n\t\t\treturn {\n\t\t\t\tconnectionFailedSnackbarOpen: false,\n\t\t\t};\n\t\t});\n\t}\n\tshowConnectionFailureSnackbar(){\n\t\tthis.setState(function (state, props) {\n\t\t\treturn {\n\t\t\t\tconnectionFailedSnackbarOpen: true,\n\t\t\t};\n\t\t});\n\t}\n\thandleConnectionFailureSnackbarClose(event,reason){\n\t\tif(reason == \"clickaway\"){\n\t\t\treturn;\n\t\t}\n\t\tthis.hideConnectionFailureSnackbar();\n\t}\n\tasync search() {\n\t\tconsole.log(\"Running Search Request\");\n\t\tlet pageSize = settings.get(\"pageSize\");\n\t\ttry {\n\t\t\tlet resp = await (\n\t\t\t\tawait fetch(\n\t\t\t\t\tmusicServer +\n\t\t\t\t\t\t\"/api/fetch_\" +\n\t\t\t\t\t\tthis.state.type +\n\t\t\t\t\t\t\"?\" +\n\t\t\t\t\t\tserialize({\n\t\t\t\t\t\t\tlimit: pageSize,\n\t\t\t\t\t\t\toffset: pageSize * this.state.pageIndex,\n\t\t\t\t\t\t\tname: this.props.query + \"%\",\n\t\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t).json();\n\t\t\tif (resp.status == \"ok\") {\n\t\t\t\tlet data = resp.data;\n\t\t\t\tconsole.log(\"Updating data for \" + this.state.query);\n\t\t\t\tthis.setState(function (state, props) {\n\t\t\t\t\treturn { pageData: data };\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (ex) {\n\t\t\tconsole.log(\"Connection failed: showing connection failure snackbar\",ex);\n\t\t\tthis.showConnectionFailureSnackbar();\n\t\t\treturn;\n\t\t}\n\t}\n\tonRowClickActivator(index){\n\t\tthis.props.onRowClick(this.state.pageData[index],index);\n\t}\n\trender() {\n\t\tlet\touterThis = this;\n\t\tfunction colgenerator(item, index) {\n\t\t\tlet cols = [];\n\t\t\tfor(let i = 0; i < this.state.columns; i ++){\n\t\t\t\tlet elem = <TableCell key={i}>{outerThis.props.renderCols(item, i)}</TableCell>;\n\t\t\t\tcols.push(elem);\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<TableRow key={index} onClick={this.onRowClickActivator.bind(this,index)}>\n\t\t\t\t\t{cols}\n\t\t\t\t</TableRow>\n\t\t\t);\n\t\t}\n\t\tlet comps = this.state.pageData.map(colgenerator.bind(this));\n\t\tlet tableHead = [];\n\t\tfor(let i = 0; i < this.state.columns; i ++){\n\t\t\ttableHead.push(\n\t\t\t\t<TableCell key={i}>\n\t\t\t\t\t{this.state.colHeaders[i]}\n\t\t\t\t</TableCell>\n\n\t\t\t)\n\t\t}\n\t\treturn (\n\t\t\t<>\n\t\t\t<div className=\"results-wrapper\">\n\t\t\t\t<TableContainer component={Paper}>\n\t\t\t\t\t<Table>\n\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t{tableHead}\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t<TableBody>{comps}</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t</TableContainer>\n\t\t\t\t<p>\n\t\t\t\t\t{i18n.__(\"Showing \")}\n\t\t\t\t\t{this.state.pageData.length} {i18n.__(\" items\")};\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t\n\t\t\t <Snackbar open={this.state.connectionFailedSnackbarOpen} autoHideDuration={settings.get(\"snackbarAutoHideDuration\")} onClose={this.handleConnectionFailureSnackbarClose.bind(this)}>\n\t\t\t <Alert onClose={this.handleConnectionFailureSnackbarClose.bind(this)} severity=\"error\">\n\t\t\t   {i18n.__(\"Unable to establish connection to media provider\")}\n\t\t\t </Alert>\n\t\t   </Snackbar></>\n\t\t);\n\t}\n}\nclass PlaylistView extends React.Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\t//super(props);\n\t\tthis.state = { searchBoxValue: \"\" };\n\t\t//this.fetchSearch = this.fetchSearch.bind(this);\n\t}\n\tcomponentDidMount() {\n\t\t// Code to run when component is destoryed -> constructor\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// Componoent dies -> deconstructor\n\t}\n\tfetchSearch(event) {\n\t\t//console.log(event);\n\t\t//console.log(\"Updating Search\");\n\t\tlet searchValue = event.target.value;\n\t\t//console.log(\"New search value \"+searchValue);\n\t\tif (event.target.value) {\n\t\t\tthis.setState(function (state, props) {\n\t\t\t\treturn {\n\t\t\t\t\tsearchBoxValue: searchValue,\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t}\n\tonItemClick(e) {\n\t\tconsole.log(\"Item Click\", e, this);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<TextField\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"searchbox\"\n\t\t\t\t\tonChange={this.fetchSearch.bind(this)}\n\t\t\t\t\tlabel={i18n.__(\"Type to search\")}\n\t\t\t\t\tfullWidth={true}\n\t\t\t\t/>\n\t\t\t\t<ResultView\n\t\t\t\t\ttype=\"playlists\"\n\t\t\t\t\tquery={this.state.searchBoxValue}\n\t\t\t\t\tonItemClick={this.onItemClick.bind(this)}\n\t\t\t\t></ResultView>\n\t\t\t\t<p>\n\t\t\t\t\t{i18n.__(\"Current querying \")} {settings.get(\"pageSize\")}{\" \"}\n\t\t\t\t\t{i18n.__(\" playlists matching the query \")}{\" \"}\n\t\t\t\t\t{this.state.searchBoxValue}\n\t\t\t\t</p>\n\t\t\t\t<div></div>\n\t\t\t</>\n\t\t);\n\t}\n}\nclass SongView extends React.Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\t//super(props);\n\t\tthis.state = { searchBoxValue: \"\" };\n\t\t//this.fetchSearch = this.fetchSearch.bind(this);\n\t}\n\tcomponentDidMount() {\n\t\t// Code to run when component is destoryed -> constructor\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// Componoent dies -> deconstructor\n\t}\n\tfetchSearch(event) {\n\t\t//console.log(event);\n\t\t//console.log(\"Updating Search\");\n\t\tlet searchValue = event.target.value;\n\t\t//console.log(\"New search value \"+searchValue);\n\t\tif (event.target.value) {\n\t\t\tthis.setState(function (state, props) {\n\t\t\t\treturn {\n\t\t\t\t\tsearchBoxValue: searchValue,\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t}\n\tcreateSongNameCol(item, key){\n\t\t// TODO: NOT USE INLINE STYLES\n\t\treturn <div key={key}>\n\t\t\t<IconButton>\n\t\t\t\t<MusicNoteIcon />\n\t\t\t</IconButton>\n\t\t\t{item.name}\n\t\t</div>;\n\t}\n\tcreateSongArtistCol(item, key){\n\t\treturn <div>\n\t\t\t{item.artist}\n\t\t</div>;\n\t}\n\tcreateDurationCol(item, key){\n\t\treturn <div>\n\t\t\t{localizedFuncs[i18n.getLocale()].formatDuration(item.duration)}\n\t\t</div>;\n\t}\n\trenderCols(item, index, classes){\n\t\tlet colGenerators = [this.createSongNameCol.bind(this),this.createSongArtistCol.bind(this),this.createDurationCol.bind(this)]; // TODO: Not hardcode this here\n\t\treturn colGenerators[index](item, index); // Execute column generator function with the index\n\t}\n\thandleRowClick(rowData, index){\n\t\tconsole.log(rowData);\t\t\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<TextField\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"searchbox\"\n\t\t\t\t\tonChange={this.fetchSearch.bind(this)}\n\t\t\t\t\tlabel={i18n.__(\"Type to search\")}\n\t\t\t\t\tfullWidth={true}\n\t\t\t\t/>\n\t\t\t\t<ResultView type=\"songs\" query={this.state.searchBoxValue} renderCols={this.renderCols.bind(this)} columnHeaders={songViewHeaders} onRowClick={this.handleRowClick.bind(this)}></ResultView>\n\t\t\t\t<p>\n\t\t\t\t\t{i18n.__(\"Current querying \")} {settings.get(\"pageSize\")}{\" \"}\n\t\t\t\t\t{i18n.__(\" songs matching the query \")} {this.state.searchBoxValue}\n\t\t\t\t</p>\n\t\t\t\t<div></div>\n\t\t\t</>\n\t\t);\n\t}\n}\n// Home View\n// TODO: Populate with intresting things\nclass HomeComponent extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\tcomponentDidMount() {\n\t\t// Code to run when component is destoryed -> constructor\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// Componoent dies -> deconstructor\n\t}\n\tstateChange() {\n\t\tthis.setState(function (state, props) {\n\t\t\treturn {};\n\t\t});\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Typography variant=\"h3\">\n\t\t\t\t\t{i18n.__(\"Hello! This is the default homescreen for now. \")}\n\t\t\t\t</Typography>\n\t\t\t</>\n\t\t);\n\t}\n}\n// Drawer\nclass MainDrawerComponent extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\ttriggerView(viewName) {\n\t\treturn ((event) => this.props.setCurView(viewName)).bind(this);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div onClick={this.props.drawerToggle}>\n\t\t\t\t<List>\n\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t<Typography variant=\"h3\">{i18n.__(\"App Name\")}</Typography>\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<ListItem button onClick={this.triggerView(\"homeview\")}>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<HomeRoundedIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary={\"Home\"}></ListItemText>\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<ListItem button onClick={this.triggerView(\"songs\")}>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<MusicNoteIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary={i18n.__(\"Songs\")}></ListItemText>\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<ListItem button onClick={this.triggerView(\"settings\")}>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<SettingsIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary={i18n.__(\"Settings\")}></ListItemText>\n\t\t\t\t\t</ListItem>\n\t\t\t\t</List>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// Legacy Views System\n\nlet views = {};\nviews.playlists = <PlaylistView />;\nviews.songs = <SongView />;\nviews.homeview = <HomeComponent />;\nwindow.debug = {};\nwindow.debug.views = views;\n\n// Main Comp\nfunction MainComponent() {\n\t// Theme Logic\n\tconst useDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n\tconst theme = React.useMemo(\n\t\t() =>\n\t\t\tcreateMuiTheme({\n\t\t\t\tpalette: {\n\t\t\t\t\ttype: useDarkMode ? \"dark\" : \"light\",\n\t\t\t\t},\n\t\t\t}),\n\t\t[useDarkMode]\n\t);\n\n\t// Handle Menu Logic\n\tlet [serversAnchorEl, setServersAnchorEl] = React.useState(null);\n\tlet [drawerOpen, setDrawerOpen] = React.useState(false);\n\tfunction toggleDrawer(event) {\n\t\tsetDrawerOpen(!drawerOpen);\n\t}\n\tfunction handleMenu(event) {\n\t\tconsole.log(this);\n\t\tsetServersAnchorEl(event.target);\n\t}\n\tfunction handleClose(event) {\n\t\tconsole.log(this);\n\t\tsetServersAnchorEl(null);\n\t}\n\n\t//let [open] = React.useState(true);\n\t// Current View\n\tlet [curView, setCurView] = React.useState(\"homeview\");\n\tconst serversOpen = Boolean(serversAnchorEl);\n\tconst stylesSet = makeStyles((theme) => ({\n\t\troot: {\n\t\t\tflexGrow: 1,\n\t\t},\n\t\ttitle: {\n\t\t\tflexGrow: 1,\n\t\t},\n\t\tmenuButton: {\n\t\t\tmarginRight: theme.spacing(2),\n\t\t},\n\t}));\n\tconst classes = stylesSet();\n\treturn (\n\t\t<>\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t<Drawer anchor=\"left\" open={drawerOpen} onClick={toggleDrawer}>\n\t\t\t\t\t\t<MainDrawerComponent\n\t\t\t\t\t\t\tdrawerToggle={toggleDrawer}\n\t\t\t\t\t\t\tsetCurView={setCurView}\n\t\t\t\t\t\t></MainDrawerComponent>\n\t\t\t\t\t</Drawer>\n\t\t\t\t\t<AppBar position=\"static\">\n\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\taria-label=\"menu\"\n\t\t\t\t\t\t\t\tonClick={toggleDrawer}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\n\t\t\t\t\t\t\t\t{i18n.__(\"App Name\")}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\t\taria-label=\"Switch Media Server\"\n\t\t\t\t\t\t\t\t\taria-controls=\"menu-appbar\"\n\t\t\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\t\t\tonClick={handleMenu}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<StorageIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\t\t\tid=\"menu-appbar\"\n\t\t\t\t\t\t\t\t\tanchorEl={serversAnchorEl}\n\t\t\t\t\t\t\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n\t\t\t\t\t\t\t\t\tkeepMounted\n\t\t\t\t\t\t\t\t\ttransformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n\t\t\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t\t\t\topen={serversOpen}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={setServer}>Local</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={setServer}>Add new server</MenuItem>\n\t\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t</AppBar>\n\t\t\t\t\t<Container maxWidth=\"md\">{views[curView]}</Container>\n\n\t\t\t\t\t<PlayerComponent />\n\t\t\t\t</div>\n\t\t\t</ThemeProvider>\n\t\t</>\n\t);\n}\n// Bootstrap code\n// really odd part i'm learning\n\nfunction setServer(comp) {}\n\n$(function () {\n\t// TODO: Replace with Vanilla JS to make script size smaller\n\n\tReactDOM.render(<MainComponent />, document.getElementById(\"root\"));\n});\n\nconsole.log(\"Player Comp\", PlayerComponent);\n"]}