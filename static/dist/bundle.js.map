{"version":3,"sources":["utils.js","player.js","prefdefaults.json","unbundle.js"],"names":["formatDuration","seconds","Math","floor","curSecs","out","toString","padStart","localizedFuncs","EventEmitter","require","hasArtist","hasMultipleArtists","i18n","ex","loadAllContentHandlers","settings","get","map","getBestContentHandler","uris","ch","uriList","split","i","length","j","canHandle","contentPlayerCache","PlayerComponent","React","Component","constructor","props","preparedState","itemName","__","position","itemLength","enabled","userDragging","internalPlaylist","playerType","name","controller","state","tick","playNextSong","player","setState","curTime","getCurrentTime","console","log","componentDidMount","registerEvents","tickInterval","setInterval","bind","componentWillUnmount","clearInterval","setNewController","ee","playSong","songData","contentURI","uri","prefferedPlayer","prefferedPlayerKey","SelectedPlayer","id","unload","document","window","emitter","init","load","play","newPlaylist","Array","from","JSON","stringify","nextSong","shift","emit","playerEventsRegistered","oThis","on","updateItem","push","duration","getDuration","updateDuration","type","params","properties","includes","itemMadeBy","artist","start","end","userChangePos","ev","newVal","setCurrentTime","time","userDragStart","userDragEnd","render","getLocale","styles","playerTitle","playerItemMadeBy","module","exports","pageSize","snackbarAutoHideDuration","test","enabledContentHandlers","youtubePlayerMethod","fallbackYoutubePlayerMethod","adblock","initialWindowHeight","initialWindowWidth","customWindowbar","playerTickrate","useDarkMode","internalServerExecutionMethod","telemetryJoke","is","ipcRenderer","Store","warn","defaults","prefdefaults","songViewHeaders","$","regeneratorRuntime","documentID","random","musicServer","capitlizeFirst","string","charAt","toUpperCase","slice","serialize","obj","str","p","encodeURIComponent","join","calcColClass","cols","Alert","placeholder","item","key","ResultView","PureComponent","pageIndex","pageData","connectionFailedSnackbarOpen","columns","columnHeaders","colHeaders","unlocalizedName","something","search","componentDidUpdate","prevProps","query","info","componentThis","updateSearchInterval","hideConnectionFailureSnackbar","showConnectionFailureSnackbar","handleConnectionFailureSnackbarClose","event","reason","resp","fetch","limit","offset","json","status","data","onRowClickActivator","index","onRowClick","outerThis","comps","colgenerator","elem","renderCols","tableHead","Paper","PlaylistView","searchBoxValue","fetchSearch","searchValue","target","value","onItemClick","e","SongView","createSongNameCol","createSongArtistCol","createDurationCol","classes","colGenerators","handleRowClick","rowData","HomeComponent","stateChange","settingsStyles","theme","popover","pointerEvents","paper","padding","spacing","buttonrow","margin","settingsGrid","SettingsView","curDisplayConfig","setDisplayConfig","useState","copyOfSettings","settingsPair","applying","setApplying","internalServerOnline","setInternalServerOnline","applyFinishSnackbarOpen","setApplyFinishedSnackbarOpen","hideApplyFinishSnackbar","jokeAnchorEl","setJokeAnchorEl","jokePopoverOpen","Boolean","newConfig","updateDisplayConfig","updateInternalServerState","online","useEffect","removeListener","backdrop","vertical","horizontal","toggleTelemetryJokeSwitch","checked","currentTarget","updateSnackbarHideDuration","newDuration","handleThemeChange","startInternalServer","send","stopInternalServer","saveConfig","keys","Object","has","set","setTimeout","location","reload","MainDrawerComponent","triggerView","viewName","setCurView","drawerToggle","MainComponent","useMemo","palette","serversAnchorEl","setServersAnchorEl","drawerOpen","setDrawerOpen","toggleDrawer","curView","serversOpen","changeController","views","playlists","songs","homeview","debug","stylesSet","root","flexGrow","title","menuButton","marginRight","handleMenu","handleClose","setServer","comp","customTitlebar","Titlebar","backgroundColor","Color","fromHex","development","remove","getElementById"],"mappings":"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","file":"bundle.js","sourceRoot":"..","sourcesContent":["// Localizations\nfunction formatDuration(seconds) {\n\tseconds = Math.floor(seconds);\n\tif(!seconds){\n\t\treturn \"---\";\n\t}\n\tlet curSecs = seconds;\n\tlet out = \"\";\n\tif (curSecs > 60 * 60) {\n\t\tout += Math.floor(curSecs / (60 * 60)) + \":\";\n\t\tcurSecs = curSecs % (60 * 60);\n\t}\n\tout +=\n\t\tMath.floor(curSecs / 60)\n\t\t\t.toString()\n\t\t\t.padStart(2, \"0\") +\n\t\t\":\" +\n\t\t(curSecs % 60).toString().padStart(2, \"0\");\n\treturn out;\n}\nconst localizedFuncs = {\n    \"en\":{\n        formatDuration: formatDuration\n    }\n}\nexport {localizedFuncs};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// Fonts (broken currently)\n// import \"fontsource-roboto\";\n// Styles\n\nimport styles from \"./player.module.css\";\n// Text Stuff\nimport Typography from \"@material-ui/core/Typography\";\n// Grid Utils\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n// Widgets\nimport Slider from \"@material-ui/core/Slider\";\n// Get localized functions\nimport { localizedFuncs } from \"./utils.js\";\n// Event Emitter\nconst EventEmitter = require('events');\n\n// React Player to be imported\n// Meant to be reusable in other contexts\nconst hasArtist = [\"Song\"];\nconst hasMultipleArtists = [\"Album\"]; // Playlists are usually user created so they will have a variety of artists\nif (!i18n) {\n\ttry {\n\t\tvar i18n = require(\"i18n\");\n\t} catch (ex) {\n\t\tvar i18n = null; // Allow custom instances to be added later.\n\t}\n} // Might already be init\nfunction loadAllContentHandlers(settings){\n\treturn settings.get(\"enabledContentHandlers\").map(require);\n}\nfunction getBestContentHandler(uris,ch){\n\t// Earlier in the protocol string the better\n\t// Comma seperated URIs are not fully supported yet\n\tlet uriList = uris.split(\",\");\n\tfor(let i = 0; i < uriList.length; i ++){\n\t\tfor(let j = 0; j < ch.length; j ++){\n\t\t\tif(ch[j].canHandle(uriList[i])){\n\t\t\t\treturn [uriList[i],ch[j]];\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nlet contentPlayerCache = {};\nclass PlayerComponent extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props); // Deprecated but needed\n\t\tlet preparedState = {\n\t\t\titemName: i18n.__(\"Nothing Playing\"),\n\t\t\tposition: 0,\n\t\t\titemLength: 0,\n\t\t\tlength: 1200,\n\t\t\tenabled: false,\n\t\t\tuserDragging: false, // Do not update while user is dragging\n\t\t\tinternalPlaylist: [],\n\t\t\tplayerType: \"none\"\n\t\t};\n\t\tif (props.name) {\n\t\t\tpreparedState[\"name\"] = props.name;\n\t\t\tpreparedState[\"enabled\"] = true;\n\t\t}\n\t\tif(props.controller){\n\t\t\tpreparedState[\"controller\"] = props.controller;\n\t\t}else{\n\t\t\tpreparedState[\"controller\"] = new EventEmitter();\n\t\t}\n\t\tthis.state = preparedState;\n\t}\n\ttick(){\n\t\tif(!this.state.enabled && this.state.internalPlaylist.length > 0){\n\t\t\tthis.playNextSong();\n\t\t}\n\t\tif(!this.state.player){\n\t\t\t//console.log(\"tick aborted, due to no player\");\n\t\t\treturn;\n\t\t}\n\t\t//console.log(\"Ticking\");\n\t\t\n\t\tif(!this.state.userDragging){\n\t\t\t// console.log('user is not dragging');\n\t\t\tthis.setState(function (state, props) {\n\t\t\t\tlet curTime = this.state.player.getCurrentTime();\n\t\t\t\tconsole.log(\"Set current time to\",curTime);\n\t\t\t\treturn { position:curTime};\n\t\t\t});\n\t\t}\n\t\t\n\t}\n\tcomponentDidMount() {\n\t\tthis.registerEvents(this.state.controller);\n\t\tthis.tickInterval = setInterval(this.tick.bind(this),this.props.settings.get(\"playerTickrate\"));\n\t}\n\tcomponentWillUnmount(){\n\t\tif(this.tickInterval){\n\t\t\tclearInterval(this.tickInterval);\n\t\t}\n\t}\n\tsetNewController(ee){\n\t\tthis.setState(function (state, props) {\n\t\t\treturn { controller:ee };\n\t\t});\n\t}\n\tasync playSong(songData){\n\t\t// Does not check queue\n\t\tlet uris = songData.contentURI;\n\t\t// TODO: NOT DEPEND ON REQUIRE CACHE\n\t\tlet [uri,ch] = getBestContentHandler(uris, loadAllContentHandlers(this.props.settings));\n\t\tlet prefferedPlayer = this.props.settings.get(ch.prefferedPlayerKey);\n\t\tlet SelectedPlayer = require(prefferedPlayer);\n\t\tlet player;\n\t\tif(this.state.playerType != SelectedPlayer.id){\n\t\t\tif(this.state.player && this.state.player.unload){\n\t\t\t\tawait this.state.player.unload();\n\t\t\t}\n\t\t\tplayer = new SelectedPlayer({document:document,window:window,emitter:this.state.controller});\n\t\t\tawait player.init();\n\t\t}else{\n\t\t\tplayer = this.state.player; // Get existing player\n\t\t}\n\t\tconsole.log('INFO: Init Finished');\n\t\tawait player.load(uri);\n\t\tconsole.log(\"INFO: Loaded uri into player\");\n\t\tawait player.play();\n\t\tconsole.log(\"INFO: Playing\")\n\t\tthis.setState(function (state, props) {\n\t\t\treturn {player: player,playerType:SelectedPlayer.id}\n\t\t});\n\t}\n\tplayNextSong(){\n\t\tif(this.state.internalPlaylist.length == 0){\n\t\t\tthis.setState(function (state, props) {\n\t\t\t\treturn {enabled: false};\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tlet newPlaylist = Array.from(this.state.internalPlaylist);\n\t\tconsole.log(JSON.stringify(newPlaylist));\n\t\tlet nextSong = newPlaylist.shift();\n\t\tthis.setState(function (state, props) {\n\t\t\treturn {internalPlaylist: newPlaylist};\n\t\t});\n\t\tthis.state.controller.emit(\"playSong\",nextSong);\n\t}\n\tregisterEvents(ee){\n\t\tif(ee.playerEventsRegistered){\n\t\t\treturn;\n\t\t}\n\t\tlet oThis = this; // original this\n\t\tee.playerEventsRegistered = true;\n\t\tee.on(\"playSong\",async function(songData){\n\t\t\t// Does not check for queue\n\t\t\tawait oThis.updateItem(\"Song\",songData);\n\t\t\tawait oThis.playSong(songData);\n\t\t\toThis.setState(function (state, props) {\n\t\t\t\treturn {enabled: true}\n\t\t\t});\n\t\t});\n\n\t\tee.on(\"queueSong\",async function (songData){\t\t\t\n\t\t\toThis.setState(function (state, props) {\n\t\t\t\tlet newPlaylist = Array.from(this.state.internalPlaylist); // How to not screw up internal state\n\t\t\t\tnewPlaylist.push(songData);\n\t\t\t\t\n\t\t\t\treturn { internalPlaylist: newPlaylist };\n\t\t\t});\n\t\t});\n\t\t\n\t\tee.on(\"playing\",function(player){\n\t\t\t// Support for start/end metadata needed\n\t\t\tif(!oThis.state.duration && player.getDuration()){\n\t\t\t\toThis.updateDuration(player.getDuration());\n\t\t\t}\n\t\t\toThis.tick();\n\t\t});\n\n\t\tee.on(\"end\", (player) => {\n\t\t\tthis.playNextSong();\n\t\t});\n\t\t\n\t}\n\tget duration(){\n\t\treturn this.state.duration;\n\t}\n\tasync updateItem(type, params) {\n\t\tlet properties = {};\n\n\t\tif (\"name\" in params) {\n\t\t\tproperties.itemName = params.name;\n\t\t}\n\t\tif (hasArtist.includes(type)) {\n\t\t\tif (\"artist\" in params) {\n\t\t\t\tproperties.itemMadeBy = params.artist;\n\t\t\t}\n\t\t}\n\t\tif (\"duration\" in params) {\n\t\t\tif(params.start){\n\t\t\t\tif(params.end){\n\t\t\t\t\tproperties.duration = end - start;\n\t\t\t\t}else{\n\t\t\t\t\tproperties.duration = params.duration - start;\n\t\t\t\t}\n\t\t\t}else if(params.end){\n\t\t\t\tproperties.duration = end;\n\t\t\t}else{\n\t\t\t\tproperties.duration = params.duration;\n\t\t\t}\n\t\t\tproperties.itemLength = properties.duration;\n\t\t} else {\n\t\t\tproperties.duration = null; // Not provided\n\t\t}\n\t\tconsole.log(\"Updating State with\",properties);\n\t\tawait this.setState(function (state, props) {\n\t\t\treturn properties;\n\t\t});\n\t}\n\tuserChangePos(ev, newVal) {\n\t\tconsole.log(\"Position changed to\", newVal);\n\t\tthis.state.player.setCurrentTime(newVal);\n\t\tthis.setState(function (state, props) {\n\t\t\treturn { position: newVal };\n\t\t});\n\t}\n\tupdateDuration(time) {\n\t\tconsole.log(\"INFO: Duration updated to \",time);\n\t\t// Sometimes duration can be found afterwards\n\t\tthis.setState(function (state, props) {\n\t\t\treturn { itemLength: time, duration: time };\n\t\t});\n\t}\n\t// User Drag Handlers\n\t// TODO: Account for touch displays???\n\tuserDragStart(ev){\n\t\tthis.setState(function (state, props) {\n\t\t\treturn { userDragging: true};\n\t\t});\n\t}\n\tuserDragEnd(ev){\n\t\tthis.setState(function (state, props) {\n\t\t\treturn { userDragging: false };\n\t\t});\n\t\tthis.userChangePos(ev,this.state.position);\n\t}\n\t// ! Main Rendering Code\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"player\">\n\t\t\t\t\t<Paper>\n\t\t\t\t\t\t<div className=\"player-inner\">\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Typography variant=\"caption\">{this.state.enabled\n\t\t\t\t\t\t\t\t? (localizedFuncs[i18n.getLocale()].formatDuration(\n\t\t\t\t\t\t\t\t\t\tthis.state.position\n\t\t\t\t\t\t\t\t  ))\n\t\t\t\t\t\t\t\t: i18n.__(\"Idle Duration\")}</Typography>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={8}>\n\t\t\t\t\t\t\t<div className=\"playback-progress\" onPointerDown={this.userDragStart.bind(this)} onPointerUp={this.userDragEnd.bind(this)}>\n\t\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\t\tvalue={this.state.position}\n\t\t\t\t\t\t\t\t\tonChange={this.userChangePos.bind(this)}\n\t\t\t\t\t\t\t\t\taria-labelledby=\"continuous-slider\"\n\t\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\t\tmax={this.state.duration}\n\t\t\t\t\t\t\t\t\tdisabled={!this.state.enabled}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t\t\t<Typography variant=\"caption\">{this.state.enabled\n\t\t\t\t\t\t\t\t? (\"-\" + localizedFuncs[i18n.getLocale()].formatDuration(\n\t\t\t\t\t\t\t\t\t\tthis.state.itemLength - this.state.position\n\t\t\t\t\t\t\t\t  ))\n\t\t\t\t\t\t\t\t: i18n.__(\"Idle Duration\")}</Typography>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<span className={styles.playerTitle}>\n\t\t\t\t\t\t<Typography variant=\"h5\">{this.state.itemName}</Typography>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className={styles.playerItemMadeBy}>\n\t\t\t\t\t\t<Typography variant=\"h6\"> {this.state.itemMadeBy}</Typography>\n\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t</Paper>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\nconsole.log(\"Imported styles\", styles);\nexport { PlayerComponent };\n","module.exports={pageSize:25,snackbarAutoHideDuration:5e3,test:!0,enabledContentHandlers:[\"./static/modules/contenthandlers/youtube\"],youtubePlayerMethod:\"./static/modules/youtube_embed_iframe\",fallbackYoutubePlayerMethod:\"browserView\",adblock:!0,\"adblock-file\":\"easylist.blocklist\",\"adblock-download-list\":\"http://easylist.to/easylist/easylist.txt\",\"cookie-obliterator\":!1,initialWindowHeight:600,initialWindowWidth:800,customWindowbar:!0,playerTickrate:250,useDarkMode:\"system\",internalServerExecutionMethod:\"moduleLoad\",telemetryJoke:!1};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// Fonts\n\n// broken?\n// Roboto font for material\n//import 'fontsource-roboto'; // Workaround parcel issue?\n\n// Core components\nimport { Skeleton } from \"@material-ui/lab\";\nimport { Container } from \"@material-ui/core\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n// import FormGroup from \"@material-ui/core/FormGroup\";\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\n// Utilites\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// Ui icons\nimport MenuIcon from \"@material-ui/icons/Menu\"; // Also called a hamburger\nimport StorageIcon from \"@material-ui/icons/Storage\";\nimport MusicNoteIcon from \"@material-ui/icons/MusicNote\";\nimport HomeRoundedIcon from \"@material-ui/icons/HomeRounded\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\n// Ui Widgets\n\nimport Paper from \"@material-ui/core/Paper\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport TouchRipple from \"@material-ui/core/ButtonBase/TouchRipple\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\n// List\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n// Tables\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Select from \"@material-ui/core/Select\";\n\n// Utilities\nimport clsx from \"clsx\";\nconst { is } = require(\"electron-util\");\nconst {ipcRenderer} = require(\"electron\");\nconst EventEmitter = require(\"events\");\n\n// Reusable Player Componoent\nimport { PlayerComponent } from \"./player\";\n\nconst Store = require(\"electron-store\");\n// Settings Loading\nif (!Store) {\n\tconsole.warn(\"NO STORE found\");\n}\nimport prefdefaults from \"./prefdefaults.json\";\nconst settings = new Store({\n\tdefaults: prefdefaults,\n});\n// Constants\nconst songViewHeaders = [\"Song Name\", \"Artist\", \"Duration\"];\n\n//import {$} from \"jquery\";\nconst $ = require(\"jquery\");\nconst regeneratorRuntime = require(\"regenerator-runtime\");\nconsole.log(\"bundle :D\");\nimport { localizedFuncs } from \"./utils.js\";\nimport { TextFieldsOutlined } from \"@material-ui/icons\";\n\n// Constants\n\nconst documentID = Math.floor(Math.random() * 100000).toString();\nlet musicServer = \"http://localhost:3000\"; // NO SLASH!\nfunction capitlizeFirst(string) {\n\treturn string.charAt(0).toUpperCase() + string.slice(1);\n}\n// https://stackoverflow.com/questions/7045065/how-do-i-turn-a-javascript-dictionary-into-an-encoded-url-string\nfunction serialize(obj) {\n\tvar str = [];\n\tfor (var p in obj)\n\t\tstr.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n\treturn str.join(\"&\");\n}\nfunction calcColClass(cols) {\n\treturn \"s\" + 12 / cols;\n}\n// https://material-ui.com/components/snackbars/\nfunction Alert(props) {\n\treturn <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nfunction placeholder(item, key) {\n\treturn <Skeleton animation=\"wave\" key={key} />;\n}\nclass ResultView extends React.PureComponent {\n\tconstructor(props) {\n\t\tsuper(props); // Deprecated but needed anyway\n\t\tthis.state = {\n\t\t\tpageIndex: 0,\n\t\t\ttype: props.type,\n\t\t\tpageData: [],\n\t\t\tconnectionFailedSnackbarOpen: false,\n\t\t\tcolumns: 3,\n\t\t};\n\t\tif (props.columns) {\n\t\t\tthis.state.columns = props.columns;\n\t\t}\n\t\tif (props.columnHeaders) {\n\t\t\tthis.state.colHeaders = props.columnHeaders.map((unlocalizedName) =>\n\t\t\t\ti18n.__(unlocalizedName)\n\t\t\t);\n\t\t} else {\n\t\t\tthis.state.colHeaders = new Array(this.state.columns).map((something) =>\n\t\t\t\ti18n.__(\"Unknown Header\")\n\t\t\t);\n\t\t}\n\t\tthis.search.bind(this)();\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (this.props.query !== prevProps.query) {\n\t\t\tthis.search();\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\t// Code to run when component starts\n\t\tconsole.info(\"Result View Mounted\");\n\t\tthis.search();\n\t\tlet componentThis = this;\n\t\tthis.updateSearchInterval = setInterval(function () {\n\t\t\tif (componentThis.query) {\n\t\t\t\tcomponentThis.search.bind(componentThis)();\n\t\t\t}\n\t\t}, 2500);\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// Componoent dies -> deconstructor\n\t\tclearInterval(this.updateSearchInterval);\n\t}\n\thideConnectionFailureSnackbar() {\n\t\tthis.setState(function (state, props) {\n\t\t\treturn {\n\t\t\t\tconnectionFailedSnackbarOpen: false,\n\t\t\t};\n\t\t});\n\t}\n\tshowConnectionFailureSnackbar() {\n\t\tthis.setState(function (state, props) {\n\t\t\treturn {\n\t\t\t\tconnectionFailedSnackbarOpen: true,\n\t\t\t};\n\t\t});\n\t}\n\thandleConnectionFailureSnackbarClose(event, reason) {\n\t\tif (reason == \"clickaway\") {\n\t\t\treturn;\n\t\t}\n\t\tthis.hideConnectionFailureSnackbar();\n\t}\n\tasync search() {\n\t\tconsole.log(\"Running Search Request\");\n\t\tlet pageSize = settings.get(\"pageSize\");\n\t\ttry {\n\t\t\tlet resp = await (\n\t\t\t\tawait fetch(\n\t\t\t\t\tmusicServer +\n\t\t\t\t\t\t\"/api/fetch_\" +\n\t\t\t\t\t\tthis.state.type +\n\t\t\t\t\t\t\"?\" +\n\t\t\t\t\t\tserialize({\n\t\t\t\t\t\t\tlimit: pageSize,\n\t\t\t\t\t\t\toffset: pageSize * this.state.pageIndex,\n\t\t\t\t\t\t\tname: this.props.query + \"%\",\n\t\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t).json();\n\t\t\tif (resp.status == \"ok\") {\n\t\t\t\tlet data = resp.data;\n\t\t\t\tconsole.log(\"Updating data for \" + this.state.query);\n\t\t\t\tthis.setState(function (state, props) {\n\t\t\t\t\treturn { pageData: data };\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (ex) {\n\t\t\tconsole.log(\"Connection failed: showing connection failure snackbar\", ex);\n\t\t\tthis.showConnectionFailureSnackbar();\n\t\t\treturn;\n\t\t}\n\t}\n\tonRowClickActivator(index) {\n\t\tthis.props.onRowClick(this.state.pageData[index], index);\n\t}\n\trender() {\n\t\tlet outerThis = this;\n\t\tfunction colgenerator(item, index) {\n\t\t\tlet cols = [];\n\t\t\tfor (let i = 0; i < this.state.columns; i++) {\n\t\t\t\tlet elem = (\n\t\t\t\t\t<TableCell align=\"left\" key={i}>\n\t\t\t\t\t\t{outerThis.props.renderCols(item, i)}\n\t\t\t\t\t</TableCell>\n\t\t\t\t);\n\t\t\t\tcols.push(elem);\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<TableRow\n\t\t\t\t\tkey={index}\n\t\t\t\t\tonClick={this.onRowClickActivator.bind(this, index)}\n\t\t\t\t>\n\t\t\t\t\t{cols}\n\t\t\t\t</TableRow>\n\t\t\t);\n\t\t}\n\t\tlet comps = this.state.pageData.map(colgenerator.bind(this));\n\t\tlet tableHead = [];\n\t\tfor (let i = 0; i < this.state.columns; i++) {\n\t\t\ttableHead.push(\n\t\t\t\t<TableCell key={i} align=\"left\">\n\t\t\t\t\t{this.state.colHeaders[i]}\n\t\t\t\t</TableCell>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"results-wrapper\">\n\t\t\t\t\t<TableContainer component={Paper}>\n\t\t\t\t\t\t<Table>\n\t\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t\t<TableRow>{tableHead}</TableRow>\n\t\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t\t<TableBody>{comps}</TableBody>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</TableContainer>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{i18n.__(\"Showing \")}\n\t\t\t\t\t\t{this.state.pageData.length} {i18n.__(\" items\")};\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\n\t\t\t\t<Snackbar\n\t\t\t\t\topen={this.state.connectionFailedSnackbarOpen}\n\t\t\t\t\tautoHideDuration={settings.get(\"snackbarAutoHideDuration\")}\n\t\t\t\t\tonClose={this.handleConnectionFailureSnackbarClose.bind(this)}\n\t\t\t\t>\n\t\t\t\t\t<Alert\n\t\t\t\t\t\tonClose={this.handleConnectionFailureSnackbarClose.bind(this)}\n\t\t\t\t\t\tseverity=\"error\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{i18n.__(\"Unable to establish connection to media provider\")}\n\t\t\t\t\t</Alert>\n\t\t\t\t</Snackbar>\n\t\t\t</>\n\t\t);\n\t}\n}\nclass PlaylistView extends React.Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\t//super(props);\n\t\tthis.state = { searchBoxValue: \"\" };\n\t\t//this.fetchSearch = this.fetchSearch.bind(this);\n\t}\n\tcomponentDidMount() {\n\t\t// Code to run when component is destoryed -> constructor\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// Componoent dies -> deconstructor\n\t}\n\tfetchSearch(event) {\n\t\t//console.log(event);\n\t\t//console.log(\"Updating Search\");\n\t\tlet searchValue = event.target.value;\n\t\t//console.log(\"New search value \"+searchValue);\n\t\tif (event.target.value) {\n\t\t\tthis.setState(function (state, props) {\n\t\t\t\treturn {\n\t\t\t\t\tsearchBoxValue: searchValue,\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t}\n\tonItemClick(e) {\n\t\tconsole.log(\"Item Click\", e, this);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<TextField\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"searchbox\"\n\t\t\t\t\tonChange={this.fetchSearch.bind(this)}\n\t\t\t\t\tlabel={i18n.__(\"Type to search\")}\n\t\t\t\t\tfullWidth={true}\n\t\t\t\t/>\n\t\t\t\t<ResultView\n\t\t\t\t\ttype=\"playlists\"\n\t\t\t\t\tquery={this.state.searchBoxValue}\n\t\t\t\t\tonItemClick={this.onItemClick.bind(this)}\n\t\t\t\t></ResultView>\n\t\t\t\t<p>\n\t\t\t\t\t{i18n.__(\"Current querying \")} {settings.get(\"pageSize\")}{\" \"}\n\t\t\t\t\t{i18n.__(\" playlists matching the query \")}{\" \"}\n\t\t\t\t\t{this.state.searchBoxValue}\n\t\t\t\t</p>\n\t\t\t\t<div></div>\n\t\t\t</>\n\t\t);\n\t}\n}\nclass SongView extends React.Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\t//super(props);\n\t\tthis.state = { searchBoxValue: \"\" };\n\t\t//this.fetchSearch = this.fetchSearch.bind(this);\n\t}\n\tcomponentDidMount() {\n\t\t// Code to run when component is destoryed -> constructor\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// Componoent dies -> deconstructor\n\t}\n\tfetchSearch(event) {\n\t\t//console.log(event);\n\t\t//console.log(\"Updating Search\");\n\t\tlet searchValue = event.target.value;\n\t\t//console.log(\"New search value \"+searchValue);\n\t\tif (event.target.value) {\n\t\t\tthis.setState(function (state, props) {\n\t\t\t\treturn {\n\t\t\t\t\tsearchBoxValue: searchValue,\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t}\n\tcreateSongNameCol(item, key) {\n\t\t// TODO: NOT USE INLINE STYLES\n\t\treturn (\n\t\t\t<div key={key}>\n\t\t\t\t<IconButton>\n\t\t\t\t\t<MusicNoteIcon />\n\t\t\t\t</IconButton>\n\t\t\t\t{item.name}\n\t\t\t</div>\n\t\t);\n\t}\n\tcreateSongArtistCol(item, key) {\n\t\treturn <div>{item.artist}</div>;\n\t}\n\tcreateDurationCol(item, key) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{localizedFuncs[i18n.getLocale()].formatDuration(item.duration)}\n\t\t\t</div>\n\t\t);\n\t}\n\trenderCols(item, index, classes) {\n\t\tlet colGenerators = [\n\t\t\tthis.createSongNameCol.bind(this),\n\t\t\tthis.createSongArtistCol.bind(this),\n\t\t\tthis.createDurationCol.bind(this),\n\t\t]; // TODO: Not hardcode this here\n\t\treturn colGenerators[index](item, index); // Execute column generator function with the index\n\t}\n\thandleRowClick(rowData, index) {\n\t\tconsole.log(rowData);\n\t\tthis.props.controller.emit(\"queueSong\", rowData);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<TextField\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"searchbox\"\n\t\t\t\t\tonChange={this.fetchSearch.bind(this)}\n\t\t\t\t\tlabel={i18n.__(\"Type to search\")}\n\t\t\t\t\tfullWidth={true}\n\t\t\t\t/>\n\t\t\t\t<ResultView\n\t\t\t\t\ttype=\"songs\"\n\t\t\t\t\tquery={this.state.searchBoxValue}\n\t\t\t\t\trenderCols={this.renderCols.bind(this)}\n\t\t\t\t\tcolumnHeaders={songViewHeaders}\n\t\t\t\t\tonRowClick={this.handleRowClick.bind(this)}\n\t\t\t\t></ResultView>\n\t\t\t\t<p>\n\t\t\t\t\t{i18n.__(\"Current querying \")} {settings.get(\"pageSize\")}{\" \"}\n\t\t\t\t\t{i18n.__(\" songs matching the query \")} {this.state.searchBoxValue}\n\t\t\t\t</p>\n\t\t\t\t<div></div>\n\t\t\t</>\n\t\t);\n\t}\n}\n// Home View\n// TODO: Populate with intresting things\nclass HomeComponent extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\tcomponentDidMount() {\n\t\t// Code to run when component is destoryed -> constructor\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// Componoent dies -> deconstructor\n\t}\n\tstateChange() {\n\t\tthis.setState(function (state, props) {\n\t\t\treturn {};\n\t\t});\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Typography variant=\"h3\">\n\t\t\t\t\t{i18n.__(\"Hello! This is the default homescreen for now. \")}\n\t\t\t\t</Typography>\n\t\t\t</>\n\t\t);\n\t}\n}\n\n// Settings\nconst settingsStyles = makeStyles((theme) => ({\n\tpopover: {\n\t\tpointerEvents: \"none\",\n\t},\n\tpaper: {\n\t\tpadding: theme.spacing(1),\n\t},\n\tbuttonrow: {\n\t\t\"& > *\": {\n\t\t\tmargin: theme.spacing(1),\n\t\t},\n\t},\n\tsettingsGrid: {\n\t\tpadding: theme.spacing(2),\n\t},\n}));\n\nfunction SettingsView() {\n\tconst classes = settingsStyles();\n\n\tlet [curDisplayConfig, setDisplayConfig] = React.useState(() => {\n\t\tlet copyOfSettings = {};\n\t\tfor (let settingsPair of settings) {\n\t\t\tcopyOfSettings[settingsPair[0]] = settingsPair[1];\n\t\t}\n\t\treturn copyOfSettings;\n\t});\n\tlet [applying, setApplying] = React.useState(false);\n\tlet [internalServerOnline, setInternalServerOnline] = React.useState(false);\n\tlet [applyFinishSnackbarOpen, setApplyFinishedSnackbarOpen] = React.useState(\n\t\tfalse\n\t);\n\tfunction showApplyFinishSnackbar(ev) {\n\t\tsetApplyFinishedSnackbarOpen(true);\n\t}\n\tfunction hideApplyFinishSnackbar(ev) {\n\t\tsetApplyFinishedSnackbarOpen(false);\n\t}\n\tfunction saveConfig(ev) {\n\t\tsetApplying(true);\n\t\tconsole.log(\"Saving Configuration from display\");\n\t\tlet keys = Object.keys(curDisplayConfig);\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tlet key = keys[i];\n\t\t\tif (settings.has(key)) {\n\t\t\t\tif (settings.get(key) != curDisplayConfig[key]) {\n\t\t\t\t\tsettings.set(key, curDisplayConfig[key]); // Update!\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsetTimeout(() => {\n\t\t\tsetApplying(false);\n\t\t\tsetApplyFinishedSnackbarOpen(true);\n\t\t}, 200); // Allow brief animation\n\t}\n\t// A joke\n\tconst [jokeAnchorEl, setJokeAnchorEl] = React.useState(null);\n\tconst handleJokePopoverOpen = (event) => {\n\t\tsetJokeAnchorEl(event.currentTarget);\n\t};\n\tconst handleJokePopoverClose = () => {\n\t\tsetJokeAnchorEl(null);\n\t};\n\tconst jokePopoverOpen = Boolean(jokeAnchorEl);\n\tfunction toggleTelemetryJokeSwitch(ev) {\n\t\tnewConfig[\"telemetryJoke\"] = ev.target.checked;\n\t\tupdateDisplayConfig();\n\t}\n\t// Render!!!\n\tlet newConfig = {};\n\tfunction updateDisplayConfig() {\n\t\tsetDisplayConfig({ ...curDisplayConfig, ...newConfig });\n\t}\n\tfunction createSwitchFunction(toggleKey) {\n\t\tlet outputFunc = (ev) => {\n\t\t\tnewConfig[toggleKey] = ev.target.checked;\n\t\t\tupdateDisplayConfig();\n\t\t};\n\t\treturn outputFunc;\n\t}\n\tfunction updateSnackbarHideDuration(ev) {\n\t\tlet newDuration = ev.target.value * 1000; // back to ms\n\t\tnewConfig[\"snackbarAutoHideDuration\"] = newDuration;\n\t\tupdateDisplayConfig();\n\t}\n\n\tfunction handleThemeChange(ev){\n\t\tnewConfig[\"useDarkMode\"] = ev.target.value;\n\t\tupdateDisplayConfig();\n\t}\n\t// Internal Server\n\tfunction updateInternalServerState(ev,data){\n\t\tconsole.log(\"Internal Server State Update recieved\");\n\t\tsetInternalServerOnline(data.online);\n\t}\n\tReact.useEffect(() => {\n\t\tipcRenderer.on(\"internalServerUpdates\",updateInternalServerState);\n\t\treturn () => {\n\t\t\tipcRenderer.removeListener(\"internalServerUpdates\",updateInternalServerState);\n\t\t};\n\t});\n\tfunction startInternalServer(){\n\t\tipcRenderer.send(\"internalServer\",\"start\");\n\t}\n\n\tfunction stopInternalServer(){\n\t\tipcRenderer.send(\"internalServer\",\"stop\");\n\t}\n\t// Temporary stuffz\n\tconst optionSpacing = 3; // Config option?\n\tconst explainationXS = 11;\n\tconst optionFormXS = 1;\n\treturn (\n\t\t<div className=\"settings\">\n\t\t\t<Backdrop className={classes.backdrop} open={applying}>\n\t\t\t\t<CircularProgress color=\"inherit\" />\n\t\t\t</Backdrop>\n\t\t\t<Typography variant=\"h3\">{i18n.__(\"Telemetry\")}</Typography>\n\t\t\t<Popover\n\t\t\t\tclassName={classes.popover}\n\t\t\t\tclasses={{\n\t\t\t\t\tpaper: classes.paper,\n\t\t\t\t}}\n\t\t\t\topen={jokePopoverOpen}\n\t\t\t\tanchorEl={jokeAnchorEl}\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: \"bottom\",\n\t\t\t\t\thorizontal: \"left\",\n\t\t\t\t}}\n\t\t\t\ttransformOrigin={{\n\t\t\t\t\tvertical: \"top\",\n\t\t\t\t\thorizontal: \"left\",\n\t\t\t\t}}\n\t\t\t\tdisableRestoreFocus\n\t\t\t>\n\t\t\t\t{i18n.__(\"This is a joke\")}\n\t\t\t</Popover>\n\t\t\t<Grid container spacing={optionSpacing}>\n\t\t\t\t<Grid item xs={explainationXS}>\n\t\t\t\t\t<Typography variant=\"body1\">\n\t\t\t\t\t\t{i18n.__(\"Enable complete data collection:\")}\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item xs={optionFormXS}>\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tchecked={curDisplayConfig[\"telemetryJoke\"]}\n\t\t\t\t\t\tonChange={toggleTelemetryJokeSwitch}\n\t\t\t\t\t\tonMouseEnter={handleJokePopoverOpen}\n\t\t\t\t\t\tonMouseLeave={handleJokePopoverClose}\n\t\t\t\t\t></Switch>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Typography variant=\"h3\">{i18n.__(\"User Interface\")}</Typography>\n\t\t\t<Grid container spacing={optionSpacing}>\n\t\t\t\t<Grid item xs={explainationXS}>\n\t\t\t\t\t<Typography variant=\"body1\">\n\t\t\t\t\t\tSnackbar Auto Hide Duration in seconds\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={optionFormXS}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tvariant=\"standard\"\n\t\t\t\t\t\tdefaultValue={curDisplayConfig[\"snackbarAutoHideDuration\"] / 1000}\n\t\t\t\t\t\tonChange={updateSnackbarHideDuration}\n\t\t\t\t\t></TextField>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={explainationXS}>\n\t\t\t\t\t<Typography variant=\"body1\">Theme</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={optionFormXS}>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tonChange={handleThemeChange}\n\t\t\t\t\t\tvalue={curDisplayConfig[\"useDarkMode\"]}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuItem value={false}>Light</MenuItem>\n\t\t\t\t\t\t<MenuItem value={true}>Dark</MenuItem>\n\t\t\t\t\t\t<MenuItem value={\"system\"}>System Theme</MenuItem>\n\t\t\t\t\t</Select>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Typography variant=\"h3\">{i18n.__(\"Ad Blocking\")}</Typography>\n\n\t\t\t<Typography variant=\"h3\">{i18n.__(\"Internal Server\")}</Typography>\n\t\t\t<div className={classes.buttonrow}>\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={startInternalServer} disabled={internalServerOnline}>\n\t\t\t\t\t{i18n.__(\"Start Internal Server\")}\n\t\t\t\t</Button>\n\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={stopInternalServer} disabled={!internalServerOnline}>\n\t\t\t\t\t{i18n.__(\"Stop Internal Server\")}\n\t\t\t\t</Button>\n\n\t\t\t\t<Button variant=\"contained\" color=\"secondary\" onClick={() => ipcRenderer.send(\"internalServer\",\"getUpdate\")}>\n\t\t\t\t\t{i18n.__(\"Force Internal Server Ui Update\")}\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<Typography variant=\"h3\">{i18n.__(\"Save Settings\")}</Typography>\n\t\t\t<Typography variant=\"body1\">\n\t\t\t\t{i18n.__(\n\t\t\t\t\t\"Some settings require you to restart Pulsify entirely as they are queried only during the startup. \"\n\t\t\t\t)}\n\t\t\t</Typography>\n\t\t\t<div className={classes.buttonrow}>\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={saveConfig}>\n\t\t\t\t\t{i18n.__(\"Save\")}\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tonClick={(ev) => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{i18n.__(\"Reload\")}\n\t\t\t\t</Button>\n\t\t\t\t<Snackbar\n\t\t\t\t\topen={applyFinishSnackbarOpen}\n\t\t\t\t\tautoHideDuration={settings.get(\"snackbarAutoHideDuration\")}\n\t\t\t\t\tonClose={hideApplyFinishSnackbar}\n\t\t\t\t>\n\t\t\t\t\t<Alert onClose={hideApplyFinishSnackbar} severity=\"success\">\n\t\t\t\t\t\t{i18n.__(\"Settings have been saved succesfully\")}\n\t\t\t\t\t</Alert>\n\t\t\t\t</Snackbar>\n\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t);\n}\n// Drawer\nclass MainDrawerComponent extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\ttriggerView(viewName) {\n\t\treturn ((event) => this.props.setCurView(viewName)).bind(this);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div onClick={this.props.drawerToggle}>\n\t\t\t\t<List>\n\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t<Typography variant=\"h3\">{i18n.__(\"App Name\")}</Typography>\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<ListItem button onClick={this.triggerView(\"homeview\")}>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<HomeRoundedIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary={\"Home\"}></ListItemText>\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<ListItem button onClick={this.triggerView(\"songs\")}>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<MusicNoteIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary={i18n.__(\"Songs\")}></ListItemText>\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<ListItem button onClick={this.triggerView(\"settings\")}>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<SettingsIcon />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary={i18n.__(\"Settings\")}></ListItemText>\n\t\t\t\t\t</ListItem>\n\t\t\t\t</List>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// Main Comp\nfunction MainComponent() {\n\t// Theme Logic\n\tlet useDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\tif (settings.get(\"useDarkMode\") != \"system\") {\n\t\tuseDarkMode = settings.get(\"useDarkMode\");\n\t}\n\tconst theme = React.useMemo(\n\t\t() =>\n\t\t\tcreateMuiTheme({\n\t\t\t\tpalette: {\n\t\t\t\t\ttype: useDarkMode ? \"dark\" : \"light\",\n\t\t\t\t},\n\t\t\t}),\n\t\t[useDarkMode]\n\t);\n\n\t// Handle Menu Logic\n\tlet [serversAnchorEl, setServersAnchorEl] = React.useState(null);\n\tlet [drawerOpen, setDrawerOpen] = React.useState(false);\n\tfunction toggleDrawer(event) {\n\t\tsetDrawerOpen(!drawerOpen);\n\t}\n\tfunction handleMenu(event) {\n\t\tconsole.log(this);\n\t\tsetServersAnchorEl(event.target);\n\t}\n\tfunction handleClose(event) {\n\t\tconsole.log(this);\n\t\tsetServersAnchorEl(null);\n\t}\n\n\t//let [open] = React.useState(true);\n\t// Current View\n\tlet [curView, setCurView] = React.useState(\"homeview\");\n\tconst serversOpen = Boolean(serversAnchorEl);\n\tconst [controller, changeController] = React.useState(new EventEmitter());\n\n\t// Legacy Views System\n\tlet views = {};\n\tviews.playlists = <PlaylistView />;\n\tviews.songs = <SongView controller={controller} />;\n\tviews.homeview = <HomeComponent />;\n\tviews.settings = <SettingsView></SettingsView>;\n\twindow.debug = {};\n\twindow.debug.views = views;\n\tconst stylesSet = makeStyles((theme) => ({\n\t\troot: {\n\t\t\tflexGrow: 1,\n\t\t},\n\t\ttitle: {\n\t\t\tflexGrow: 1,\n\t\t},\n\t\tmenuButton: {\n\t\t\tmarginRight: theme.spacing(2),\n\t\t},\n\t}));\n\tconst classes = stylesSet();\n\treturn (\n\t\t<>\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t<Drawer anchor=\"left\" open={drawerOpen} onClick={toggleDrawer}>\n\t\t\t\t\t\t<MainDrawerComponent\n\t\t\t\t\t\t\tdrawerToggle={toggleDrawer}\n\t\t\t\t\t\t\tsetCurView={setCurView}\n\t\t\t\t\t\t></MainDrawerComponent>\n\t\t\t\t\t</Drawer>\n\t\t\t\t\t<AppBar position=\"static\">\n\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\taria-label=\"menu\"\n\t\t\t\t\t\t\t\tonClick={toggleDrawer}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\n\t\t\t\t\t\t\t\t{i18n.__(\"App Name\")}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\t\taria-label=\"Switch Media Server\"\n\t\t\t\t\t\t\t\t\taria-controls=\"menu-appbar\"\n\t\t\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\t\t\tonClick={handleMenu}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<StorageIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\t\t\tid=\"menu-appbar\"\n\t\t\t\t\t\t\t\t\tanchorEl={serversAnchorEl}\n\t\t\t\t\t\t\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n\t\t\t\t\t\t\t\t\tkeepMounted\n\t\t\t\t\t\t\t\t\ttransformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n\t\t\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t\t\t\topen={serversOpen}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={setServer}>Local</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={setServer}>Add new server</MenuItem>\n\t\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t</AppBar>\n\t\t\t\t\t<Container maxWidth=\"md\">{views[curView]}</Container>\n\n\t\t\t\t\t<PlayerComponent settings={settings} controller={controller} />\n\t\t\t\t</div>\n\t\t\t</ThemeProvider>\n\t\t</>\n\t);\n}\n// Bootstrap code\n// really odd part i'm learning\n\nfunction setServer(comp) {}\n\n$(function () {\n\t// TODO: Replace with Vanilla JS to make script size smaller\n\tif (settings.get(\"customWindowbar\")) {\n\t\tconst customTitlebar = require(\"custom-electron-titlebar\");\n\n\t\tnew customTitlebar.Titlebar({\n\t\t\tbackgroundColor: customTitlebar.Color.fromHex(\"#444\"),\n\t\t});\n\t\tif (is.development) {\n\t\t\t$(\"#menufix\").remove();\n\t\t} else {\n\t\t\t$(\"div[role=menubar]\").remove();\n\t\t}\n\t}\n\tReactDOM.render(<MainComponent />, document.getElementById(\"root\"));\n});\n\nconsole.log(\"Player Comp\", PlayerComponent);\n"]}